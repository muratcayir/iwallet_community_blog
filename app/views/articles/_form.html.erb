<%= form_with(model: article, local: true, class: "space-y-6") do |form| %>
  <% if article.errors.any? %>
    <div id="error_explanation" class="text-red-500 mb-4">
      <h2 class="text-lg font-semibold"><%= pluralize(article.errors.count, "error") %> prohibited this article from being saved:</h2>
      <ul class="list-disc list-inside">
        <% article.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-4">
    <%= form.label :title, class: 'block text-gray-700 font-semibold' %>
    <%= form.text_field :title, class: 'border border-gray-300 rounded w-full py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500' %>
  </div>

  <div class="mb-4">
    <%= form.label :content, class: 'block text-gray-700 font-semibold' %>
    <%= form.rich_text_area :content, class: 'border border-gray-300 rounded w-full py-2 px-3 trix-content focus:outline-none focus:ring-2 focus:ring-blue-500' %>
  </div>

<div class="mb-4">
  <%= form.label :tags, class: 'block text-gray-700 font-semibold' %>
  <%= form.select :tag_ids, options_for_select(Tag.all.pluck(:name, :id)), {}, multiple: true, class: "tom-select" %>
</div>


  <% if !@article.published? %>
    <div class="mb-4">
      <%= form.label :status, class: 'block text-gray-700 font-semibold' %>
      <%= form.select :status, Article.statuses.keys.map { |status| [status.titleize, status] }, {}, class: 'border border-gray-300 rounded w-full py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500' %>
    </div>
  <% end %>

  <div class="actions">
    <%= form.submit article.new_record? ? 'Create' : 'Update', class: 'bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded' %>
  </div>

  <div id="tagModal" class="fixed z-50 inset-0 overflow-y-auto hidden">
    <div class="flex items-center justify-center min-h-screen px-4 py-6">
      <div class="fixed inset-0 transition-opacity" aria-hidden="true">
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
      </div>

      <div class="bg-white rounded-lg shadow-xl overflow-hidden transform transition-all sm:max-w-lg sm:w-full">
        <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
          <div class="sm:flex sm:items-start">
            <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
              <h3 class="text-lg leading-6 font-medium text-gray-900">
                Select Tags
              </h3>
              <div class="mt-2">
                <select id="tagsSelect" multiple class="border border-gray-300 rounded w-full py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <% Tag.all.each do |tag| %>
                    <option value="<%= tag.id %>" <%= "selected" if @article.tag_ids.include?(tag.id) %>><%= tag.name %></option>
                  <% end %>
                </select>
              </div>
            </div>
          </div>
        </div>
        <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
          <button type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-700 sm:ml-3 sm:w-auto sm:text-sm" onclick="closeModal()">Done</button>
          <button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 sm:mt-0 sm:w-auto sm:text-sm" onclick="closeModal()">Cancel</button>
        </div>
      </div>
    </div>
  </div>
<% end %>

<script>
  function openModal() {
    document.getElementById('tagModal').classList.remove('hidden');
  }

  function closeModal() {
    document.getElementById('tagModal').classList.add('hidden');
    let selectedTags = Array.from(document.getElementById('tagsSelect').selectedOptions);
    let selectedTagIds = selectedTags.map(option => option.value);
    let selectedTagNames = selectedTags.map(option => option.text);

    document.getElementById('hiddenTagIds').value = selectedTagIds.join(',');

    document.getElementById('selectedTags').innerHTML = selectedTagNames.join(', ');
  }

  document.addEventListener("turbo:load", () => {
    new TomSelect('#tagsSelect');
  });
</script>
